// Specs

CHARACTER_SET "abcdeéfghijklmnopqrstuvwxyzåäöüá'"
PHONEME_SET "i: I u0 }: a A: u: U E: {: E { au y: Y e: e 2: 9: 2 9 o: O @ eu p b t rt m n d rd k g N rn f v C rs r l s x S h rl j . " """
DEFAULT_PHONEME "_"
PHONEME_DELIMITER " "



// Filters

FILTER "^((?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*)((?:i:|I|u0|\}:|a|A:|u:|U|E:|\{:|E|\{|au|y:|Y|e:|e|2:|9:|2|9|o:|O|@|eu)) ((?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*[.] (?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*(?:i:|I|u0|\}:|a|A:|u:|U|E:|\{:|E|\{|au|y:|Y|e:|e|2:|9:|2|9|o:|O|@|eu))$" -> "$1\"\" $2 $3" // simple filter to put accent II first syllable if the word has two syllables and ends with a vowel
FILTER "^((?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*)((?:i:|I|u0|\}:|a|A:|u:|U|E:|\{:|E|\{|au|y:|Y|e:|e|2:|9:|2|9|o:|O|@|eu)) ((?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*[.] (?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*([UOa] rs?))$" -> "$1\"\" $2 $3" // simple filter to put accent II first syllable if the word has two syllables and ends with '[OUa] r'
FILTER "^((?:[^i:Iu0\}:aA:u:UE:\{:E\{auy:Ye:e2:9:29o:O@eu" ]+ )*)((?:i:|I|u0|\}:|a|A:|u:|U|E:|\{:|E|\{|au|y:|Y|e:|e|2:|9:|2|9|o:|O|@|eu))" -> "$1\" $2" // simple filter to put stress on first syllable
FILTER "e([." ]+)r" -> "{$1r" // e r => { r
FILTER "E([." ]+)r" -> "{$1r"
FILTER "2([." ]+)r" -> "9$1r"
FILTER "E:([." ]+)r" -> "{:$1r"
FILTER "2:([." ]+)r" -> "9:$1r"


// Syllabification
SYLLDEF TYPE MOP
SYLLDEF ONSETS "p, b, t, rt, m, n, d, rd, k, g, rn, f, v, C, rs, r, l, s, x, S, h, rl, j, s, p, r, rs p r, s p l, rs p l, s p j, rs p j, s t r, rs rt r, s k r, rs k r, s k v, rs k v, p r, p j, p l, b r, b j, b l, t r, rt r, t v, rt v, d r, rd r, d v, rd v, k r, k l, k v, k n, g r, g l, g n, f r, f l, f j, f n, v r, s p, s t, s k, s v, s l, s m, s n, n j, rs p, rs rt, rs k, rs v, rs rl, rs m, rs rn, rn j, m j"
SYLLDEF SYLLABIC "i: I u0 }: a A: u: U E: {: E { au y: Y e: e 2: 9: 2 9 o: O @ eu"
SYLLDEF STRESS "\" \"\" %"
SYLLDEF DELIMITER "."
SYLLDEF STRESS_PLACEMENT AfterSyllabic


// Variables

VAR VOICELESS [p|k|t|f|s|h|c]
//VAR VOICED [b|d|g|z]
VAR CONS [wrtpsdfghjklzxcvbnm]
VAR SHORTCONS ([wrtpsdfghjklxcvbnm]|r[tdnsl])
VAR LONGCONS ([wrtpsdfghjklxcvbnm])\1
VAR VOWEL [eéyuioåaöä]
VAR PALAT [eéyiöä]
VAR NOVOWEL [wrtpsdfghjklxcvbnm]*

// Rules

' -> ∅

au -> au
eu -> eu

ä -> {: / _ r #
ö -> 9: / _ r #
ä -> {: / _ r[tdnsl] #
ö -> 9: / _ r[tdnsl] #
ö -> 9: / _ r VOWEL #
ä -> {: / _ r VOWEL #
ä -> { / _ r
ö -> 9 / _ r
e -> { / # NOVOWEL _ r CONS #

é -> e:
e -> e: / # NOVOWEL _ SHORTCONS #
y -> y: / # NOVOWEL _ SHORTCONS #
u -> }: / # NOVOWEL _ SHORTCONS #
i -> i: / # NOVOWEL _ SHORTCONS #
o -> u: / # NOVOWEL _ SHORTCONS #
å -> o: / # NOVOWEL _ SHORTCONS #
a -> A: / # NOVOWEL _ SHORTCONS #
á -> A: / # NOVOWEL _ SHORTCONS #
ö -> 2: / # NOVOWEL _ SHORTCONS #
ä -> E: / # NOVOWEL _ SHORTCONS #

e -> e: / _ CONS VOWEL #
y -> y: / _ CONS VOWEL #
u -> }: / _ CONS VOWEL #
i -> i: / _ CONS VOWEL #
o -> u: / _ CONS VOWEL #
å -> o: / _ CONS VOWEL #
a -> A: / _ CONS VOWEL #
á -> A: / _ CONS VOWEL #
ö -> 2: / _ CONS VOWEL #
ä -> E: / _ CONS VOWEL #

e -> e: / # NOVOWEL _ VOWEL #
y -> y: / # NOVOWEL _ VOWEL #
u -> }: / # NOVOWEL _ VOWEL #
i -> i: / # NOVOWEL _ VOWEL #
o -> u: / # NOVOWEL _ VOWEL #
å -> o: / # NOVOWEL _ VOWEL #
a -> A: / # NOVOWEL _ VOWEL #
á -> A: / # NOVOWEL _ VOWEL #
ö -> 2: / # NOVOWEL _ VOWEL #
ä -> E: / # NOVOWEL _ VOWEL #

e -> e: / # NOVOWEL _ #
y -> y: / # NOVOWEL _ #
u -> }: / # NOVOWEL _ #
i -> i: / # NOVOWEL _ #
o -> u: / # NOVOWEL _ #
å -> o: / # NOVOWEL _ #
a -> A: / # NOVOWEL _ #
á -> A: / # NOVOWEL _ #
ö -> 2: / # NOVOWEL _ #
ä -> E: / # NOVOWEL _ #

e -> e / _ LONGCONS
y -> Y / _ LONGCONS
u -> u0 / _ LONGCONS
i -> I / _ LONGCONS
o -> U / _ LONGCONS
å -> O / _ LONGCONS
a -> a / _ LONGCONS
á -> a / _ LONGCONS
ö -> 2 / _ LONGCONS
ä -> E / _ LONGCONS

e -> e
y -> Y
u -> u0
i -> I
o -> U / _ #
o -> U / _ r #
o -> U / _ rs #
o -> O
å -> O
a -> a
á -> a
ö -> 2
ä -> E

e -> @ / _ #

rt -> rt
rd -> rd
rs -> rs
rl -> rl
rn -> rn

sch -> (S, x) / _ a? # 
sch -> S
sh -> S
sj -> x

ng -> N

bb -> b
dd -> d
ff -> f
gg -> g
jj -> j
kk -> k
ll -> l
mm -> m
nn -> n
pp -> p
qq -> k
rr -> r
ss -> s
tt -> t
vv -> v
zz -> t s
x -> k s

k -> C / # _ PALAT
g -> j / # _ PALAT
stj -> x
tj -> C
g -> j / r _ #
g -> j / r _ [se]
g -> g
ps -> s / # _

m -> m
v -> v
f -> f
j -> j

r -> r
d -> d
s -> s
l -> l
h -> h
t -> t

v -> f / _ VOICELESS

ck -> k
k -> k
n -> N / _ [kg]
n -> n

b -> p / _ VOICELESS
b -> b 


c -> s
p -> p
q -> k
w -> v
z -> s
ü -> Y

// Tests

TEST dusch -> (d " u0 S, d " u0 x)
TEST duscha -> (d "" u0 . S a, d "" u0 . x a)
TEST borta -> b "" O . rt a
TEST abt -> " a p t
TEST bortadusch -> (b " O . rt a . d u0 S, b " O . rt a . d u0 x)
TEST filifjonka -> f " I . l I . f j O N . k a
TEST unga -> "" u0 N . a
TEST 'unga -> "" u0 N . a
TEST a'a -> "" a . a
//TEST get -> j " e: t
//TEST gäst -> j " E s t
TEST gap -> g " A: p
TEST där -> d " {: r
TEST pizza -> p "" I t . s a
TEST pilätta -> p " I . l E . t a
TEST fragráncia -> f r " a . g r a n . s I . a
TEST fragrancia -> f r " a . g r a n . s I . a
TEST fragéncia -> f r " a . g e: n . s I . a
TEST papp -> p " a p
TEST pappa -> p "" a . p a
TEST part -> p " A: rt
TEST borta -> b "" O . rt a
TEST bra -> b r " A:
TEST sedan -> s " e . d a n
TEST nära -> n "" {: . r a
TEST berg -> b " { r j
TEST cerro -> s "" { . r U
TEST större -> s t "" 9 . r e
TEST ut -> " }: t
TEST sjö -> x " 2:
TEST nya -> n "" y: . a
TEST källor -> C "" E . l U r
TEST hittar -> h "" I . t a r
